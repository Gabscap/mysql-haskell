sudo: required
dist: trusty

env:
 - CABALVER=1.18 GHCVER=7.8.4  MYSQLVER=5.5
 - CABALVER=1.22 GHCVER=7.10.2 MYSQLVER=5.5
 - CABALVER=1.24 GHCVER=8.0.1  MYSQLVER=5.5
 - CABALVER=1.24 GHCVER=8.0.1  MYSQLVER=5.6
 - CABALVER=1.24 GHCVER=8.0.1  MYSQLVER=5.7

# Note: the distinction between `before_install` and `install` is not important.
before_install:
 - export DEBIAN_FRONTEND=noninteractive

 - travis_retry sudo add-apt-repository -y ppa:hvr/ghc
 - travis_retry sudo apt-get update
 - travis_retry sudo apt-get install cabal-install-$CABALVER ghc-$GHCVER # see note about happy/alex
 - export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$PATH
 - travis_retry sudo apt-get install happy-1.19.4 alex-3.1.3
 - export PATH=/opt/alex/3.1.3/bin:/opt/happy/1.19.4/bin:$PATH

 - |
    if [ ${MYSQLVER} == "5.7" ]; then
        sudo add-apt-repository -y ppa:ondrej/mysql-5.7
        sudo apt-get update
        sudo apt-get --yes install mysql-server
        sudo mysql -V
        sudo mysql -u root -e "CREATE DATABASE IF NOT EXISTS testMySQLHaskell;"
        sudo mysql -u root -e "CREATE USER 'testMySQLHaskell'@'localhost' IDENTIFIED BY ''"
        sudo mysql -u root -e "GRANT ALL PRIVILEGES ON testMySQLHaskell.* TO 'testMySQLHaskell'@'localhost'"
        sudo mysql -u root -e "GRANT REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO 'testMySQLHaskell'@'localhost';"
        sudo mysql -u root -e "FLUSH PRIVILEGES"
        sudo cp /etc/mysql/mysql.cnf /etc/my.cnf
    else
        travis_retry sudo apt-get install -q -y mysql-server-${MYSQLVER} mysql-client-core-${MYSQLVER} mysql-client-${MYSQLVER}
        mysql -V
        mysql -u root -e "CREATE DATABASE IF NOT EXISTS testMySQLHaskell;"
        mysql -u root -e "CREATE USER 'testMySQLHaskell'@'localhost' IDENTIFIED BY ''"
        mysql -u root -e "GRANT ALL PRIVILEGES ON testMySQLHaskell.* TO 'testMySQLHaskell'@'localhost'"
        mysql -u root -e "GRANT REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO 'testMySQLHaskell'@'localhost';"
        mysql -u root -e "FLUSH PRIVILEGES"
    fi
    sudo echo "server-id = 1" | sudo tee -a /etc/mysql/mysql.conf.d/mysqld.cnf
    sudo echo "log_bin = /var/log/mysql/mysql-bin.log" | sudo tee -a /etc/mysql/mysql.conf.d/mysqld.cnf
    sudo service mysql restart

install:
 - cabal --version
 - echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
 - travis_retry cabal update
 - cabal install --only-dependencies --enable-tests --enable-benchmarks

# Here starts the actual work to be performed for the package under test; any command which exits with a non-zero exit code causes the build to fail.
script:
 - if [ -f configure.ac ]; then autoreconf -i; fi
 - cabal configure --enable-tests --enable-benchmarks -v2  # -v2 provides useful information for debugging
 - cabal build   # this builds all libraries and executables (including tests/benchmarks)
 - cabal test
 - cabal bench
 - cabal check
 - cabal sdist   # tests that a source-distribution can be generated

# Check that the resulting source distribution can be built & installed.
# If there are no other `.tar.gz` files in `dist`, this can be even simpler:
# `cabal install --force-reinstalls dist/*-*.tar.gz`
 - SRC_TGZ=$(cabal info . | awk '{print $2;exit}').tar.gz &&
   (cd dist && cabal install --force-reinstalls "$SRC_TGZ")

